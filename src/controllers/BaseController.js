'use strict';

/**
 * Интерфейс контроллера. Каждый контроллер имеет входную точку work().
 */
export default class ControllerInterface {
    /**
     * Данный метод должен реализовывать логику контроллера (получение данных и отрисовка view) в
     * подклассе.
     * @param {Object} data данные полученные при обработке URL'a
     */
    work(data) {
        throw new Error('Controller: метод work должен быть реализован в подклассе');
    }

    /**
     * Метод вызывается роутером, при очередном срабатывании go,
     * если данный контроллер был последним контроллером, активированным роутером.
     */
    onDeactivating() {
        throw new Error('Controller: метод onDeactivating должен быть реализован в подклассе');
    }
}
